---
title: "Introduction to R Shiny"
author: Lokesh Mano
institute: NBIS, SciLifeLab
keywords: bioinformatics, course, workshop, scilifelab, nbis
format: 
  revealjs: 
    slide-number: true
filters:
  - shinylive
---

## Setup {visibility="hidden"}

```{r}
#| echo: false
# load the packages you need
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(kableExtra)
library(gridExtra)
library(shiny)
```

## Contents 

* [Introduction to RShiny](#gallery)
* [Code Structure](#code-structure)
* [App execution](#app-execution)
* [UI](#ui-layout)
* [Server](#server)

## [Gallery](https://shiny.posit.co/r/gallery/)

::: {.shiny-gallery-parent}

::: {.shiny-gallery-child}
![[K-means](https://gallery.shinyapps.io/050-kmeans-example/) [sidebar, simple]{.badge .smaller}](assets/examples/kmeans.jpg){group="shiny-examples"}
:::

::: {.shiny-gallery-child}
![[Movie explorer](https://gallery.shinyapps.io/051-movie-explorer/) [sidebar, simple]{.badge .smaller}](assets/examples/movie-explorer.jpg){group="shiny-examples"}
:::

::: {.shiny-gallery-child}
![[freeR](https://committedtotape.shinyapps.io/freeR/) [simple]{.badge .smaller}](assets/examples/freer.jpg){group="shiny-examples"}
:::

::: {.shiny-gallery-child}
![[SuperZip](https://gallery.shinyapps.io/063-superzip-example/) [intermediate, geo]{.badge .smaller}](assets/examples/superzip.jpg){group="shiny-examples"}
:::

::: {.shiny-gallery-child}
![[Workout creator](https://parmsam.shinyapps.io/MixThingsUp/) [intermediate]{.badge .smaller} ](assets/examples/workout-generator.jpg){group="shiny-examples"}
:::

::: {.shiny-gallery-child}
![[WildLift](https://abbiodiversity.shinyapps.io/WildLift/) [intermediate, dashboard]{.badge .smaller}](assets/examples/wildlift.jpg){group="shiny-examples"}
:::

::: {.shiny-gallery-child}
![[Covid tracker](https://vac-lshtm.shinyapps.io/ncov_tracker/) [intermediate]{.badge .smaller} ](assets/examples/covid-tracker.jpg){group="shiny-examples"}
:::

::: {.shiny-gallery-child}
![[Cashflow calc](https://cashflowcalc.com/) [intermediate]{.badge .smaller} ](assets/examples/cashflow-calculator.jpg){group="shiny-examples"}
:::

::: {.shiny-gallery-child}
![[Genome browser](https://gallery.shinyapps.io/genome_browser/) [intermediate]{.badge .smaller} ](assets/examples/genome-browser.jpg){group="shiny-examples"}
:::

::: {.shiny-gallery-child}
![[Species selection](https://thebeczone.ca/shiny/cciss/) [adv]{.badge .smaller} ](assets/examples/climate-change.jpg){group="shiny-examples"}
:::

::: {.shiny-gallery-child}
![[Protein structure](https://niels-van-der-velden.shinyapps.io/shinyNGLVieweR/) [adv, dashboard]{.badge .smaller} ](assets/examples/protein-structure.jpg){group="shiny-examples"}
:::

::: {.shiny-gallery-child}
![[Commute explorer](https://nz-stefan.shinyapps.io/commute-explorer-2/) [adv, geo]{.badge .smaller} ](assets/examples/commute-explorer.jpg){group="shiny-examples"}
:::

::: {.shiny-gallery-child}
![[Steam explorer](https://eki-anjo.shinyapps.io/steam-shiny/) [adv, dashboard]{.badge .smaller}](assets/examples/steam-explorer.jpg){group="shiny-examples"}
:::

::: {.shiny-gallery-child}
![[System pipe](https://tgirke.shinyapps.io/systemPipeShiny/) [adv, dashboard]{.badge .smaller} ](assets/examples/system-pipe.jpg){group="shiny-examples"}
:::

::: {.shiny-gallery-child}
![[Shark attack](https://mdubel.shinyapps.io/shark-attack/) [adv]{.badge .smaller} ](assets/examples/shark-attack.jpg){group="shiny-examples"}
:::

:::


## What is shiny?

::: {.fragment}

* Interactive documents & web applications
* Completely created using R
* Needs a live environment

:::

::: {.fragment}

### Usage

* [Standalone web applications](http://shiny.rstudio.com/gallery/see-more.html)
* [Dashboard/Flexboard](http://rstudio.github.io/shinydashboard/examples.html)
* [Interactive RMarkdown](https://shiny.posit.co/r/articles/build/rmarkdown/)
* [VScode extensions](https://shiny.posit.co/blog/posts/shiny-vscode-1.0.0/)

:::

::: {.fragment}

### App structure

* UI Layout
* UI Inputs (Widgets)
* UI Outputs
* Renderer
* Builder

:::

## Code structure

::: {.fragment .column width="45%"}


__One file format__

_app.R_

```
ui <- fluidPage()
server <- function(input,output) {}
shinyApp(ui=ui,server=server)
```
:::

::: {.column width="5%"}
:::

::: {.fragment .column width="45%"}

__Two file format__

_ui.R_

```
ui <- fluidPage()
```

_server.R_

```
server <- function(input,output) {}
```
:::

## App execution

* Change to app directory, then run `runApp()`
* Use `shinyApp()`

```{r,eval=FALSE}
shinyApp(
ui=fluidPage(),
server=function(input,output) {}
)
```

* From Rmd file using `rmarkdown::run()`
* Running as a separate process from terminal

```{bash,eval=FALSE}
R -e "shiny::runApp('~/shinyapp')"
```

## UI • Layout {height=800}

::: { .fragment }

![](../../assets/images/app-layout.png){ width="50%" }

:::

::: {.smaller .fragment}

```{r}
#| eval: false

shinyApp(
ui=fluidPage(
  titlePanel("Title Panel"),
  sidebarLayout(
    sidebarPanel(
      helpText("Sidebar Panel")
    ),
    mainPanel(tabsetPanel(
                tabPanel("tab1",
                         fluidRow(
                           column(6,helpText("Col1")),
                           column(6,
                                  helpText("Col2"),
                                  fluidRow(
                                    column(4,style="background-color:#b0c6fb",
                                           helpText("Col1")
                                    ),
                                    column(4,style="background-color:#ffa153",
                                           helpText("Col2")
                                    ),
                                    column(4,style="background-color:#b1f6c6",
                                           helpText("Col3")
                                    )
                                  )
                           )
                         )
                ),
                tabPanel("tab2",
                         inputPanel(helpText("Input Panel"))
                ),
                tabPanel("tab3",
                  wellPanel(helpText("Well Panel"))
                )
              )
    )
  )
),
server=function(input,output) {})
```
:::

## UI • Widgets • Input

:::: {.column width="55%"}
```{r,eval=FALSE}
shinyApp(
ui=fluidPage(
  fluidRow(
    column(4,
           fileInput("file-input","fileInput:"),
           selectInput("select-input",label="selectInput",choices=c("A","B","C")),
           numericInput("numeric-input",label="numericInput",value=5,min=1,max=10),
           sliderInput("slider-input",label="sliderInput",value=5,min=1,max=10),
           textInput("text-input",label="textInput"),
           textAreaInput("text-area-input",label="textAreaInput"),
           dateInput("date-input",label="dateInput"),
           dateRangeInput("date-range-input",label="dateRangeInput"),
           radioButtons("radio-button",label="radioButtons",choices=c("A","B","C"),inline=T),
           checkboxInput("checkbox","checkboxInput",value=FALSE),
           actionButton("action-button","Action"),
           hr(),
           submitButton()
    )
  )
),
server=function(input,output) {
})
```

::: {.small}

[Widgets gallery](http://shiny.rstudio.com/gallery/widget-gallery.html)

:::

:::: 

::: {.column width="5%"}
::: 

::: {.fragment .column width="40%"}

![](../../assets/images/app-widgets-input.png){  width="45%" }

:::




## UI • Widgets • Outputs

::: {.column width="60%"}
```{r,eval=FALSE}
shinyApp(
ui=fluidPage(fluidRow(column(5,
           textInput("text_input",label="textInput",value="<h3 style='color:red'>Red text</h3>"),
           hr(),
           htmlOutput("html_output"),
           textOutput("text_output"),
           verbatimTextOutput("verbatim_text_output"),
           tableOutput("table_output"),
           plotOutput("plot_output",width="300px",height="300px")
    ))),
server=function(input, output) {
  output$html_output <- renderText({input$text_input})
  output$text_output <- renderText({input$text_input})
  output$verbatim_text_output <- renderText({input$text_input})
  output$table_output <- renderTable({iris[1:3,1:3]})
  output$plot_output <- renderPlot({
    plot(iris[,1],iris[,2])
  })
})
```
:::

::: {.column width="40%"}

![](../../assets/images/app-widgets-output.png){ width="70%" }

:::

## Dynamic UI

- UI elements are created conditionally using `uiOutput()`/`renderUI()`

```{r,eval=FALSE}
shinyApp(
ui=fluidPage(
  selectInput("data",label="Select data",
              choices=c("mtcars","faithful","iris")),
  tableOutput("table"),
 uiOutput("ui")
),
server=function(input, output) {
  
  data <- reactive({ get(input$data, 'package:datasets') })
  
 output$ui <- renderUI({
  if(input$data=="iris") plotOutput("plot",width="400px")
  })
  
  output$plot <- renderPlot({hist(data()[, 1])})
  output$table <- renderTable({head(data())})
})
```

* Other options include `conditionalPanel()`, `ìnsertUI()` and `removeUI()`

## Server

* `Server` is a function that assembles your `input` into `output` using R based code.
* Three rules to be followed to write a server function:

::: {.fragment}

**Rule 1:** Save objects to display to `output$`

![](../../assets/images/server1.png.svg){ width="70%" fig-align="center"}

:::

## Server

**Rule 2:** Build objects to display with `render*()`

* R-Code block (can even be an entire R script) between the braces `{}` inside the `render*()` function.

::: {.fragment}

```{r,eval=FALSE}
  output$hist <- renderPlot({
                    tile <- "histogram of 100 random numbers"
                    hist(rnorm(100), main = title)
                })
```
::: 

::: {.fragment}

:::: {.small}

[Different Render functions](https://rstudio.github.io/cheatsheets/html/shiny.html#outputs)

::::

:::

## Server

**Rule 3:** Use input values with `input$`

::: {.fragment}

![](../../assets/images/shiny-input.png){width="60%" fig-align="center"}

::: 

::: {.fragment}

![](../../assets/images/shiny-input2.png){width="60%" fig-align="center"}

::: 

## {background-image="../../assets/images/precourse/data_viz_adv_2.jpeg"}

::: {.center-xy}

### Thank you. Questions? {style="text-align: center;"}
Slide inspirations: Roy Francis (NBIS, RaukR2024)

:::


